/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Series as PrismaSeries } from "@prisma/client";

export class SeriesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SeriesCountArgs, "select">): Promise<number> {
    return this.prisma.series.count(args);
  }

  async seriesItems(args: Prisma.SeriesFindManyArgs): Promise<PrismaSeries[]> {
    return this.prisma.series.findMany(args);
  }
  async series(
    args: Prisma.SeriesFindUniqueArgs
  ): Promise<PrismaSeries | null> {
    return this.prisma.series.findUnique(args);
  }
  async createSeries(args: Prisma.SeriesCreateArgs): Promise<PrismaSeries> {
    return this.prisma.series.create(args);
  }
  async updateSeries(args: Prisma.SeriesUpdateArgs): Promise<PrismaSeries> {
    return this.prisma.series.update(args);
  }
  async deleteSeries(args: Prisma.SeriesDeleteArgs): Promise<PrismaSeries> {
    return this.prisma.series.delete(args);
  }
}
